{
  "extends": "@vue/tsconfig/tsconfig.web.json",
  /*** 应该进行类型检查的ts文件 ***/
  "include": [
    "types/*.d.ts",
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "src/**/*.md",
    "mock/**/*.ts"
  ],
  /*** 不进行类型检查的文件 ***/
  // ts 排除的文件, "exclude"默认情况下会排除node_modules，bower_components，jspm_packages和<outDir>目录
  "exclude": [
    "node_modules",
    "build",
    "dist",
    "cypress",
    "src/**/__tests__/*",
    "tests/**/*",
    "coverage",
    "scripts",
    "**/*.js",
    "**/**/*.js",
    ".{idea,git,cache,output,temp}"
  ],
  "compilerOptions": {
    "composite": true,
    // 根路径, 非绝对地址的模块会基于这个目录去解析，默认值是当前目录
    "baseUrl": ".",
    /* 配置具体如何解析 require/import 的导入，
     * 模块名到基于 baseUrl的路径映射的列表（指定特殊模块的路径）
     * 路径映射，与 baseUrl 关联
     * 如使用jq时不想使用默认版本，而需要手动指定版本，可进行如下配置
     */
    "paths": {
      "@/*": ["./src/*"],
      // "#/*": ["types/*"],
      "types/*": ["./types/*"],
      "tests/*": ["./tests/*"],
      "public/*": ["./public/*"]
    },
    // 默认所有可见的"@types"包会在编译过程中被包含进来， 而typeRoots指定要包含的类型声明文件路径列表（仅以下路径的包），
    "typeRoots": ["./types", "node_modules/@types", "node_modules/vue/types"],
    // 设置引入的类型声明文件名列表。 指定了types，只有被列出来的包才会被包含进来，指定"types": []来禁用自动引入@types包
    // 如不设置此项，默认会加载全部能找到的 node_modules/@types/xxx 包
    "types": ["vite/client", "element-plus/global"]
  }
}
